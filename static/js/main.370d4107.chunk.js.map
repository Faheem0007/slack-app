{"version":3,"sources":["serviceWorker.js","firebase.js","component/auth/register.js","component/auth/login.js","component/metapanel/metapenal.js","component/colorpanel/colorpanel.js","component/Messages/MessageHeader.js","component/Messages/Filemodel.js","component/Messages/Progressbar.js","component/Messages/MessageForm.js","component/Messages/Message.js","component/Messages/Messages.js","component/sidepanel/userpanel.js","component/sidepanel/Channels.js","actions/index.js","actions/types.js","component/sidepanel/DirectMessage.js","component/sidepanel/sidepanel.js","component/Home.js","component/Spinner.js","component/App.js","reducer/UserReducer.js","reducer/ChannelReducer.js","reducer/index.js","index.js"],"names":["Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Register","isFormValid","error","errors","isFormEmpty","state","message","setState","concat","isPasswordValid","email","password","confirmPassword","username","length","changeHandle","event","target","name","value","SubmitHandle","e","loading","preventDefault","auth","createUserWithEmailAndPassword","then","createUser","user","updateProfile","displayName","photoURL","md5","saveUser","catch","console","log","refUser","child","uid","set","avatar","displyError","map","msg","i","key","displyErrorHandleInputs","input","some","toLowerCase","includes","database","ref","bind","this","Grid","textAlign","verticalAlign","className","Column","style","maxWidth","Header","as","icon","color","Icon","Form","onSubmit","size","Segment","stacked","Input","fluid","iconPosition","placeholder","onChange","type","Button","disabled","to","React","Component","memo","Login","props","isFromValid","signInWithEmailAndPassword","signIn","isDisplayError","Metapanel","Colorpanel","Sidebar","Menu","inverted","vertical","visible","width","Divider","MessageHeader","channelName","newuniqueUser","onChangeHandle","clearing","floated","marginBottom","Subheader","Filemodal","file","authorized","onChangeFileHandle","files","sendFile","fileUpload","closeModel","isAuthorized","contentType","mime","lookup","filename","model","Modal","basic","open","onClose","Content","label","labelPosition","Actions","onClick","ProgressBar","uploadState","percentage","Progress","percent","indicating","progress","MessageForm","openModel","createMessage","fileURL","timestamp","ServerValue","TIMESTAMP","id","sendMessage","messageRef","channel","push","err","metaData","pathTo","filePath","Date","toISOString","uploadTask","storageRef","put","on","snap","percentUpload","Math","round","bytesTransferred","totalBytes","snapshot","getDownloadURL","downloadURL","sendFileMessage","storage","Group","widths","content","Progressbar","isOwnMessage","Message","Comment","Avatar","src","Author","Metadata","moment","fromNow","timeFrom","hasOwnProperty","isImage","Image","image","Text","Messages","searchTerm","searchMessagewithUser","addListeners","channelId","addMessageListener","messageLoaded","val","messages","messageLoading","countUniqueUser","uniqueUser","reduce","accu","SerachMessage","regix","RegExp","searchMessageAndUser","displayChannelName","displayMessages","userReducer","prevProps","Fragment","UserPanel","DropdownOptions","text","SignOut","backgroundColor","Row","padding","Dropdown","trigger","spaced","options","Channels","removeListner","channelRef","off","closeModal","modal","openModal","addChannel","loadedChannels","setFristChannel","channelDetails","newChannel","details","createdBy","update","firstChannel","setCurrentChannel","setActiveChannel","activeChannel","displayChannels","Item","changeChannel","opacity","active","firstLoad","cursor","Field","connect","payload","currentChannel","DirectMessage","users","userRef","connectRef","prefrenceRef","userId","loadedUser","onDisconnect","remove","addStatusToUser","userid","updateUser","acc","status","fixed","background","fontSize","Home","columns","marginLeft","Spinner","Dimmer","Loader","App","onAuthStateChanged","setUser","history","userSignOut","isLoading","path","component","exact","render","withRouter","signOut","initState","action","initChannelState","channel_raducer","rootReducer","combineReducers","store","createStore","rootraducer","compose","applyMiddleware","thunk","composeWithDevTools","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.370d4107.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nconst config = {\n  apiKey: \"AIzaSyARXB4c3M5Odwi8UBlo8JmVs0mMMnD8JeY\",\n  authDomain: \"slack-clone-5ba5b.firebaseapp.com\",\n  databaseURL: \"https://slack-clone-5ba5b.firebaseio.com/\",\n  projectId: \"slack-clone-5ba5b\",\n  storageBucket: \"slack-clone-5ba5b.appspot.com\",\n  messagingSenderId: \"622820841969\",\n  appId: \"1:622820841969:web:8755fb66723b56b8\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import React from \"react\";\nimport md5 from \"md5\";\nimport {\n  Grid,\n  Message,\n  Header,\n  Button,\n  Icon,\n  Segment,\n  Form\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nimport firebase from \"./../../firebase\";\n\nclass Register extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: [],\n      loading: false,\n      refUser: firebase.database().ref(\"user\")\n    };\n    this.isFormEmpty = this.isFormEmpty.bind(this);\n    this.isPasswordValid = this.isPasswordValid.bind(this);\n    this.changeHandle = this.changeHandle.bind(this);\n    this.SubmitHandle = this.SubmitHandle.bind(this);\n    this.displyError = this.displyError.bind(this);\n  }\n\n  isFormValid = () => {\n    let errors = [];\n    let error;\n    if (this.isFormEmpty(this.state)) {\n      error = { message: \"All Fields Fills \" };\n      this.setState({\n        errors: errors.concat(error)\n      });\n      return false;\n    } else if (!this.isPasswordValid(this.state)) {\n      error = { message: \"Password InValid\" };\n      this.setState({\n        errors: errors.concat(error)\n      });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  isFormEmpty = ({ email, password, confirmPassword, username }) => {\n    return (\n      !email.length ||\n      !password.length ||\n      !confirmPassword.length ||\n      !username.length\n    );\n  };\n\n  isPasswordValid = ({ password, confirmPassword }) => {\n    if (password.length < 6 || confirmPassword.length < 6) {\n      return false;\n    } else if (password !== confirmPassword) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  changeHandle = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  SubmitHandle = e => {\n    if (this.isFormValid()) {\n      this.setState({\n        errors: [],\n        loading: true\n      });\n      e.preventDefault();\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then(createUser => {\n          createUser.user\n            .updateProfile({\n              displayName: this.state.username,\n              photoURL: `http://gravatar.com/avatar/${md5(\n                createUser.user.email\n              )}?d=identicon`\n            })\n            .then(() => {\n              this.saveUser(createUser)\n                .then(() => {\n                  this.setState({\n                    loading: false\n                  });\n                })\n                .catch(e => {\n                  console.log(e);\n                });\n            });\n        })\n        .catch(e => {\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat({ message: e.message })\n          });\n        });\n    }\n  };\n\n  saveUser = createUser => {\n    return this.state.refUser.child(createUser.user.uid).set({\n      name: createUser.user.displayName,\n      avatar: createUser.user.photoURL\n    });\n  };\n\n  displyError = errors =>\n    errors.map((msg, i) => {\n      return <p key={i}>{msg.message}</p>;\n    });\n\n  displyErrorHandleInputs = (errors, input) => {\n    return errors.some(error => error.message.toLowerCase().includes(input))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const {\n      email,\n      password,\n      confirmPassword,\n      username,\n      errors,\n      loading\n    } = this.state;\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" icon color=\"orange\">\n            <Icon name=\"puzzle piece\" color=\"orange\" />\n            Register for EwigChat\n          </Header>\n          <Form onSubmit={this.SubmitHandle} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"username\"\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"User name ...\"\n                onChange={this.changeHandle}\n                className={this.displyErrorHandleInputs(errors, \"username\")}\n                value={username}\n                type=\"text\"\n              />\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                onChange={this.changeHandle}\n                iconPosition=\"left\"\n                value={email}\n                placeholder=\"Email ...\"\n                className={this.displyErrorHandleInputs(errors, \"email\")}\n                type=\"email\"\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                value={password}\n                icon=\"lock\"\n                iconPosition=\"left\"\n                onChange={this.changeHandle}\n                placeholder=\"Password\"\n                className={this.displyErrorHandleInputs(errors, \"password\")}\n              />\n              <Form.Input\n                type=\"password\"\n                icon=\"repeat\"\n                onChange={this.changeHandle}\n                name=\"confirmPassword\"\n                value={confirmPassword}\n                placeholder=\"confirm Password...\"\n                iconPosition=\"left\"\n                className={this.displyErrorHandleInputs(errors, \"password\")}\n              />\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"orange\"\n                fluid\n                size=\"large\"\n              >\n                {\" \"}\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displyError(errors)}\n            </Message>\n          )}\n          <Message>\n            Already a user? <Link to=\"/login\"> Login</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default React.memo(Register);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Segment,\n  Grid,\n  Form,\n  Header,\n  Icon,\n  Message\n} from \"semantic-ui-react\";\n\nimport firebase from \"./../../firebase\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: [],\n      loading: false\n    };\n  }\n\n  changeHandle = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  SubmitHandle = e => {\n    e.preventDefault();\n    if (this.isFromValid(this.state)) {\n      this.setState({\n        error: [],\n        loading: true\n      });\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(signIn => {\n          this.setState({\n            errors: [],\n            loading: false\n          });\n          console.log(signIn);\n        })\n        .catch(e => {\n          this.setState({\n            errors: this.state.errors.concat(e),\n            loading: false\n          });\n        });\n    }\n  };\n\n  isDisplayError = errors => {\n    return errors.map((msg, i) => <p key={i}>{msg.message}</p>);\n  };\n\n  displyErrorHandleInputs = (errors, input) => {\n    return errors.some(error => error.message.toLowerCase().includes(input));\n  };\n\n  isFromValid = ({ email, password }) => {\n    if (!(email.length && password.length) || email === \"\" || password === \"\") {\n      if (this.state.errors.length === 0) {\n        let error = { message: \"fill all field\" };\n        this.setState({\n          errors: this.state.errors.concat(error)\n        });\n        return false;\n      }\n    } else {\n      return true;\n    }\n  };\n\n  render() {\n    const { email, password, errors, loading } = this.state;\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"violet\">\n            <Icon name=\"code branch\" color=\"violet\" />\n            Login to Ewigchat\n          </Header>\n          <Form onSubmit={this.SubmitHandle} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                name=\"email\"\n                value={email}\n                placeholder=\"enter your email address...\"\n                icon=\"mail\"\n                type=\"email\"\n                onChange={this.changeHandle}\n                className={\n                  this.displyErrorHandleInputs(errors, \"email\") ? \"error\" : \"\"\n                }\n                iconPosition=\"left\"\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"enter your Password...\"\n                icon=\"lock\"\n                value={password}\n                onChange={this.changeHandle}\n                className={\n                  this.displyErrorHandleInputs(errors, \"password\")\n                    ? \"error\"\n                    : \"\"\n                }\n                iconPosition=\"left\"\n              />\n              <Button\n                size=\"large\"\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                fluid\n                color=\"violet\"\n              >\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.isDisplayError(errors)}\n            </Message>\n          )}\n          <Message>\n            Don't have an account ? <Link to=\"/register\">Register</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default React.memo(Login);\n","import React from \"react\";\n\nconst Metapanel = () => {\n  return <div>Metapanel</div>;\n};\n\nexport default Metapanel;\n","import React from \"react\";\nimport { Divider, Menu, Sidebar, Button } from \"semantic-ui-react\";\n\nclass Colorpanel extends React.Component {\n  render() {\n    return (\n      <Sidebar\n        as={Menu}\n        icon=\"labeled\"\n        inverted\n        vertical\n        visible\n        width=\"very thin\"\n      >\n        <Divider />\n\n        <Button icon=\"add\" size=\"small\" color=\"blue\" />\n      </Sidebar>\n    );\n  }\n}\n\nexport default Colorpanel;\n","import React, { Component } from \"react\";\nimport { Header, Segment, Input, Icon } from \"semantic-ui-react\";\n\nclass MessageHeader extends Component {\n  render() {\n    const { channelName, newuniqueUser, onChangeHandle } = this.props;\n    return (\n      <Segment clearing>\n        {/* Hearder */}\n        <Header fluid=\"true\" as=\"h2\" floated=\"left\" style={{ marginBottom: 0 }}>\n          <span>\n            {channelName}\n            <Icon name=\"star outline\" color=\"black\" />\n          </span>\n          <Header.Subheader>{newuniqueUser}</Header.Subheader>\n        </Header>\n\n        {/* Search Input */}\n        <Header floated=\"right\">\n          <Input\n            size=\"mini\"\n            onChange={onChangeHandle}\n            icon=\"search\"\n            name=\"searchTerm\"\n            placeholder=\"Search Message...\"\n          />\n        </Header>\n      </Segment>\n    );\n  }\n}\n\nexport default React.memo(MessageHeader);\n","import React, { Component } from \"react\";\nimport mime from \"mime-types\";\nimport { Modal, Input, Button, Icon } from \"semantic-ui-react\";\n\nclass Filemodal extends Component {\n  state = {\n    file: null,\n    authorized: [\"image/jpeg\", \"image/png\"]\n  };\n\n  /** function for select file */\n\n  onChangeFileHandle = event => {\n    const file = event.target.files[0];\n    this.setState({ file });\n  };\n\n  /**SendFile Function */\n\n  sendFile = () => {\n    const { file } = this.state;\n    const { fileUpload, closeModel } = this.props;\n\n    if (file !== null) {\n      if (this.isAuthorized(file.name)) {\n        const metaData = { contentType: mime.lookup(file.name) };\n        fileUpload(file, metaData);\n        closeModel();\n      }\n    }\n  };\n\n  /**Function for file type check */\n\n  isAuthorized = filename =>\n    this.state.authorized.includes(mime.lookup(filename));\n\n  /** function for check message is image or contents */\n\n  /**render JSX */\n\n  render() {\n    const { model, closeModel } = this.props;\n    return (\n      <Modal basic open={model} onClose={closeModel}>\n        <Modal.Header>Select an Image File</Modal.Header>\n        <Modal.Content>\n          <Input\n            type=\"file\"\n            fluid\n            name=\"file\"\n            onChange={this.onChangeFileHandle}\n            label=\"file type jpg,png\"\n            labelPosition=\"right\"\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button icon color=\"orange\" onClick={this.sendFile} inverted>\n            <Icon name=\"checkmark\" />\n            Send\n          </Button>\n          <Button icon color=\"red\" inverted onClick={closeModel}>\n            <Icon name=\"remove\" />\n            Cancel\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default Filemodal;\n","import React from \"react\";\nimport { Progress } from \"semantic-ui-react\";\n\nconst ProgressBar = ({ uploadState, percentage }) => {\n  return (\n    uploadState && (\n      <Progress\n        percent={percentage}\n        size=\"medium\"\n        className=\"progress__bar\"\n        inverted\n        indicating\n        progress\n      ></Progress>\n    )\n  );\n};\n\nexport default ProgressBar;\n","import React, { Component } from \"react\";\nimport { Button, Input, Segment } from \"semantic-ui-react\";\n\nimport firebase from \"../../firebase\";\nimport Filemodal from \"./Filemodel\";\nimport Progressbar from \"./Progressbar\";\n\nclass MessageForm extends Component {\n  /**constructor method for state Object */\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      storageRef: firebase.storage().ref(),\n      message: \"\",\n      loading: true,\n      errors: [],\n      model: false,\n      uploadState: \"\",\n      percentUpload: 0,\n      uploadTask: null\n    };\n  }\n\n  /**Model Functions */\n\n  openModel = () => this.setState({ model: true });\n  closeModel = () => this.setState({ model: false });\n\n  /** Change Handler For get Input Value */\n\n  onChangeHandle = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  /**Create Message Functions */\n\n  createMessage = (fileURL = null) => {\n    const { user } = this.props;\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: user.uid,\n        name: user.displayName,\n        avatar: user.photoURL\n      }\n    };\n\n    if (fileURL !== null) {\n      message[\"image\"] = fileURL;\n    } else {\n      message[\"content\"] = this.state.message;\n    }\n    return message;\n  };\n\n  /** SendMessage Function */\n\n  sendMessage = () => {\n    const { messageRef, channel } = this.props;\n    const { message } = this.state;\n\n    if (message) {\n      this.setState({ loading: false });\n      messageRef\n        .child(channel.id)\n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          this.setState({\n            loading: false,\n            errors: [],\n            message: \"\"\n          });\n        })\n        .catch(err => {\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat(err)\n          });\n        });\n    } else {\n      this.setState({\n        errors: this.state.errors.concat({ message: \"Please Add Message\" })\n      });\n    }\n  };\n\n  /**File Upload Function  */\n\n  fileUpload = (file, metaData) => {\n    const pathTo = this.props.channel.id;\n    const ref = this.props.messageRef;\n    const filePath = `chat/public/${new Date().toISOString()}.jpg`;\n\n    this.setState(\n      {\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metaData)\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          snap => {\n            let percentUpload = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            );\n            this.setState({\n              percentUpload\n            });\n          },\n          err => {\n            console.log(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              uploadTask: null,\n              uploadState: \"errors\"\n            });\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(downloadURL => {\n                this.sendFileMessage(downloadURL, ref, pathTo);\n              })\n              .catch(err => {\n                console.log(err);\n                this.setState({\n                  errors: this.state.errors.concat(err),\n                  uploadTask: null,\n                  uploadState: \"errors\"\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  /** sendFileMessage function for send image in message */\n\n  sendFileMessage = (downloadURL, ref, pathTo) => {\n    ref\n      .child(pathTo)\n      .push()\n      .set(this.createMessage(downloadURL))\n      .then(() => {\n        this.setState({ uploadState: \"done\" });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          errors: this.state.errors.concat(err)\n        });\n      });\n  };\n\n  /**Render JSX */\n\n  render() {\n    const { errors, model, uploadState, percentUpload } = this.state;\n    return (\n      <Segment className=\"message__form\">\n        <Input\n          label={<Button icon=\"add\" />}\n          name=\"message\"\n          onChange={this.onChangeHandle}\n          labelPosition=\"left\"\n          value={this.state.message}\n          placeholder={\n            errors.length > 0 ? errors[0].message : \"write your message\"\n          }\n          fluid\n          className={\n            errors.some(error =>\n              error.message.toLowerCase().includes(\"message\")\n            )\n              ? \"error\"\n              : \"\"\n          }\n          style={{ marginBottom: \".7em\" }}\n        />\n        <Button.Group icon widths=\"2\">\n          <Button\n            color=\"orange\"\n            content=\"Add Reply\"\n            icon=\"edit\"\n            onClick={this.sendMessage}\n            labelPosition=\"left\"\n          />\n          <Button\n            color=\"teal\"\n            content=\"Media Upload\"\n            icon=\"cloud upload\"\n            labelPosition=\"right\"\n            onClick={this.openModel}\n          />\n        </Button.Group>\n        <Filemodal\n          model={model}\n          fileUpload={this.fileUpload}\n          closeModel={this.closeModel}\n        />       \n        <Progressbar uploadState={uploadState} percentage={percentUpload} />\n      </Segment>\n    );\n  }\n}\n\nexport default MessageForm;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Comment, Image } from \"semantic-ui-react\";\n\nconst isOwnMessage = (user, message) => {\n  return user.uid === message.user.id ? \"self__message\" : \"\";\n};\n\nconst timeFrom = message => moment(message.timestamp).fromNow();\n\nconst isImage = message => {\n  return message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\");\n};\n\nconst Message = ({ message, user }) => {\n  return (\n    <Comment>\n      <Comment.Avatar src={message.user.avatar} />\n      <Comment.Content className={isOwnMessage(user, message)}>\n        <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\n        <Comment.Metadata>{timeFrom(message)}</Comment.Metadata>\n        {isImage(message) ? (\n          <Image src={message.image} className=\"message__image\" />\n        ) : (\n          <Comment.Text>{message.content}</Comment.Text>\n        )}\n      </Comment.Content>\n    </Comment>\n  );\n};\n\nexport default Message;\n","import React, { Component } from \"react\";\nimport { Segment, Comment } from \"semantic-ui-react\";\n\nimport firebase from \"../../firebase\";\nimport MessageHeader from \"./MessageHeader\";\nimport MessageForm from \"./MessageForm\";\nimport Message from \"./Message\";\n\nclass Messages extends Component {\n  /**constructor method for state object */\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      messageRef: firebase.database().ref(\"messages\"),\n      user: this.props.user.userReducer.user,\n      messages: [],\n      messageLoading: true,\n      channel: null,\n      newuniqueUser: \"\",\n      searchTerm: \"\",\n      searchMessageAndUser: []\n    };\n  }\n\n  /**lifeCycle Methods */\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      if (this.state.user && this.props.channel) {\n        this.addListeners(this.props.channel.id);\n      }\n    }\n  }\n\n  /**geting input value */\n\n  onChangeHandle = e => {\n    this.setState(\n      {\n        searchTerm: e.target.value\n      },\n      () => this.searchMessagewithUser()\n    );\n  };\n\n  /**Addlistener function */\n\n  addListeners = channelId => {\n    this.addMessageListener(channelId);\n  };\n\n  /** addMessageListener function */\n\n  addMessageListener = channelId => {\n    let messageLoaded = [];\n    this.state.messageRef.child(channelId).on(\"child_added\", snap => {\n      messageLoaded.push(snap.val());\n      this.setState({\n        messages: messageLoaded,\n        messageLoading: false\n      });\n      this.countUniqueUser(messageLoaded);\n    });\n  };\n\n  /**function for unique User */\n\n  countUniqueUser = message => {\n    const uniqueUser = message.reduce((accu, message) => {\n      if (!accu.includes(message.user.name)) {\n        accu.push(message.user.name);\n      }\n      return accu;\n    }, []);\n    const newuniqueUser = `${uniqueUser.length} user${\n      uniqueUser.length > 1 ? \"s\" : \"\"\n    }`;\n    this.setState({\n      newuniqueUser\n    });\n  };\n\n  /**Serach message and specific user message */\n\n  searchMessagewithUser = () => {\n    const SerachMessage = [...this.state.messages];\n    const regix = new RegExp(this.state.searchTerm, \"gi\");\n    const searchMessageAndUser = SerachMessage.reduce((accu, message) => {\n      if (\n        (message.content && message.content.match(regix)) ||\n        message.user.name.match(regix)\n      ) {\n        accu.push(message);\n      }\n      return accu;\n    }, []);\n    this.setState({\n      searchMessageAndUser\n    });\n  };\n\n  /**function for display channel name */\n\n  displayChannelName = channel => (channel ? `#${channel.name}` : \"\");\n\n  /** displayMessages function for display message */\n\n  displayMessages = messages => {\n    return (\n      messages.length > 0 &&\n      messages.map((message, i) => (\n        <Message key={i} message={message} user={this.state.user} />\n      ))\n    );\n  };\n\n  render() {\n    const {\n      messageRef,\n      user,\n      messages,\n      searchMessageAndUser,\n      newuniqueUser,\n      searchTerm\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <MessageHeader\n          channelName={this.displayChannelName(this.props.channel)}\n          newuniqueUser={newuniqueUser}\n          onChangeHandle={this.onChangeHandle}\n        />\n        <Segment>\n          <Comment.Group className=\"messages\">\n            {searchTerm\n              ? this.displayMessages(searchMessageAndUser)\n              : this.displayMessages(messages)\n              }\n          </Comment.Group>\n        </Segment>\n\n        <MessageForm\n          messageRef={messageRef}\n          user={user}\n          channel={this.props.channel}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Messages;\n","import React from \"react\";\nimport { Grid, Header, Icon, Dropdown, Image } from \"semantic-ui-react\";\n\nclass UserPanel extends React.Component {\n  DropdownOptions = () => {\n    return [\n      {\n        key: \"user\",\n        text: (\n          <span>\n            Sign in as\n            <strong>{this.props.user.userReducer.user.displayName}</strong>\n          </span>\n        ),\n        disabled: true\n      },\n      {\n        key: \"avatar\",\n        text: <span>Change Avatar</span>\n      },\n      {\n        key: \"signout\",\n        text: <span onClick={this.props.SignOut}>Sign out</span>\n      }\n    ];\n  };\n\n  render() {\n    const { userReducer } = this.props.user;\n    return (\n      <Grid style={{ backgroundColor: \"#4c3c4c\" }}>\n        <Grid.Column>\n          <Grid.Row style={{ padding: \"1.2em\" }}>\n            <Header as=\"h2\" inverted floated=\"left\">\n              <Icon name=\"code\" />\n              <Header.Content>EwigChat</Header.Content>\n            </Header>\n          </Grid.Row>\n          <Header as=\"h4\" inverted style={{ padding: \"0.25em\" }}>\n            <Dropdown\n              trigger={\n                <span>\n                  <Image\n                    src={userReducer.user.photoURL}\n                    avatar\n                    spaced=\"right\"\n                  />\n                  {userReducer.user.displayName}\n                </span>\n              }\n              options={this.DropdownOptions()}\n            />\n          </Header>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default React.memo(UserPanel);\n","import React, { Component } from \"react\";\nimport { Menu, Icon, Modal, Form, Input, Button } from \"semantic-ui-react\";\n\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel } from \"./../../actions\";\n\nimport firebase from \"../../firebase\";\n\nclass Channels extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user.userReducer.user,\n      Channels: [],\n      channelName: \"\",\n      channelDetails: \"\",\n      modal: false,\n      activeChannel: \"\",\n      firstLoad: true,\n      channelRef: firebase.database().ref(\"channels\")\n    };\n  }\n\n  /**LifeCycle Methods */\n\n  componentWillUnmount() {\n    this.removeListner();\n  }\n\n  removeListner = () => {\n    this.state.channelRef.off();\n  };\n\n  /** model Functions */\n  closeModal = () => this.setState({ modal: false });\n  openModal = () => this.setState({ modal: true });\n\n  /** Change Handle Function */\n  onChangeHandle = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  /** Submit Handle Function */\n\n  onSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.addChannel();\n    }\n  };\n  componentDidMount() {\n    this.addListeners();\n  }\n\n  /** Function For Loaded Data from firebase */\n\n  addListeners = () => {\n    let loadedChannels = [];\n    this.state.channelRef.on(\n      \"child_added\",\n      snap => {\n        loadedChannels.push(snap.val());\n        this.setState({ Channels: loadedChannels }, this.setFristChannel());\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  };\n\n  /** Function For add Data in firebase */\n\n  isFormValid = ({ channelName, channelDetails }) =>\n    channelName && channelDetails;\n\n  addChannel = () => {\n    const { channelName, channelRef, channelDetails, user } = this.state;\n\n    const key = channelRef.push().key;\n\n    const newChannel = {\n      id: key,\n      name: channelName,\n      details: channelDetails,\n      createdBy: {\n        name: user.displayName,\n        avatar: user.photoURL\n      }\n    };\n    channelRef\n      .child(key)\n      .update(newChannel)\n      .then(() => {\n        this.setState({ channelDetails: \"\", channelName: \"\" });\n        this.closeModal();\n        console.log(\"channel added\");\n      })\n      .catch(err => console.error(err));\n  };\n\n  /** Function For select default Channel */\n\n  setFristChannel = () => {\n    let firstChannel = this.state.Channels[0];\n    if (this.state.Channels.length > 0) {\n      this.props.setCurrentChannel(firstChannel);\n      this.setActiveChannel(firstChannel);\n    }\n  };\n\n  /** Function For ADD active class Channel */\n\n  setActiveChannel = channel => {\n    this.setState({\n      activeChannel: channel.id\n    });\n  };\n\n  /** Function For Display Channel */\n\n  displayChannels = ({ Channels }) => {\n    return (\n      Channels.length > 0 &&\n      Channels.map(channel => (\n        <Menu.Item\n          key={channel.id}\n          onClick={() => this.changeChannel(channel)}\n          name={channel.name}\n          style={{ opacity: 0.7 }}\n          active={this.state.activeChannel === channel.id}\n        >\n          #{channel.name}\n        </Menu.Item>\n      ))\n    );\n  };\n\n  /**Change Channel */\n\n  changeChannel = channel => {\n    this.setActiveChannel(channel);\n    this.props.setCurrentChannel(channel);\n  };\n\n  render() {\n    const { Channels, modal } = this.state;\n    return (\n      <React.Fragment>\n        <Menu.Menu>\n          <Menu.Item style={{ cursor: \"pointer\" }}>\n            <span>\n              <Icon name=\"exchange\" />\n              Channels\n            </span>\n            ({Channels.length}) <Icon name=\"add\" onClick={this.openModal} />\n          </Menu.Item>\n          {this.displayChannels(this.state)}\n        </Menu.Menu>\n        <Modal basic open={modal} onClose={this.closeModal}>\n          <Modal.Header>Add Channels</Modal.Header>\n          <Modal.Content>\n            <Form>\n              <Form.Field>\n                <Input\n                  fluid\n                  onChange={this.onChangeHandle}\n                  label=\"Name of Channel\"\n                  name=\"channelName\"\n                />\n              </Form.Field>\n              <Form.Field>\n                <Input\n                  fluid\n                  onChange={this.onChangeHandle}\n                  label=\"About the Channel\"\n                  name=\"channelDetails\"\n                />\n              </Form.Field>\n            </Form>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              color=\"green\"\n              inverted\n              style={{ cursor: \"pointer\" }}\n              onClick={this.onSubmit}\n            >\n              <Icon name=\"checkmark\" />\n              Add\n            </Button>\n            <Button\n              color=\"green\"\n              inverted\n              onClick={this.closeModal}\n              style={{ cursor: \"pointer\" }}\n            >\n              Close\n              <Icon name=\"remove\" />\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setCurrentChannel }\n)(Channels);\n","import * as actionTypes from \"./types\";\n\nimport firebase from \"../firebase\";\n\n/* User actions */\n\nexport const setUser = user => {\n  return {\n    type: actionTypes.SET_USER,\n    payload: {\n      user: user\n    }\n  };\n};\n\nexport const userSignOut = () => {\n  return {\n    type: actionTypes.USER_SIGN_OUT\n  };\n};\n\nexport const SignOut = () => {\n  firebase.auth().signOut();\n  return {\n    type: actionTypes.USER_LOADING\n  };\n};\n\n/* CHANGE_CHANNEL_TYPE Actions */\n\nexport const setCurrentChannel = channel => {\n  return {\n    type: actionTypes.CHANGE_CHANNEL_TYPE,\n    payload: {\n      currentChannel: channel\n    }\n  };\n};\n","/* user types */\n\nexport const SET_USER = \"SET_USER\";\nexport const USER_SIGN_OUT = \"USER_SIGN_OUT\";\nexport const USER_LOADING = \"USER_LOADING\";\n\n/* Channels Types */\n\nexport const CHANGE_CHANNEL_TYPE = \"CHANGE_CHANNEL_TYPE\";\n","import React, { Component } from \"react\";\nimport { Menu, Icon } from \"semantic-ui-react\";\n\nimport firebase from \"../../firebase\";\n\nclass DirectMessage extends Component {\n  state = {\n    users: [],\n    user: this.props.user.userReducer.user,\n    userRef: firebase.database().ref(\"user\"),\n    connectRef: firebase.database().ref(\".info/connected\"),\n    prefrenceRef: firebase.database().ref(\"prefrence\")\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListeners(this.state.user.uid);\n    }\n  }\n\n  /** */\n\n  addListeners = userId => {\n    let loadedUser = [];\n    this.state.userRef.on(\"child_added\", snap => {\n      if (userId !== snap.key) {\n        let user = snap.val();\n        user[\"uid\"] = snap.key;\n        user[\"status\"] = \"offline\";\n        loadedUser.push(user);\n        this.setState({\n          users: loadedUser\n        });\n      }\n    });\n\n    this.state.connectRef.on(\"value\", snap => {\n      if (snap.key === true) {\n        let ref = this.state.connectRef.child(userId);\n        ref.set(true);\n        ref.onDisconnect().remove(err => {\n          if (err !== null) {\n            console.log(err);\n          }\n        });\n      }\n    });\n\n    this.state.prefrenceRef.on(\"child_added\", snap => {\n      if (userId !== snap.key) {\n        this.addStatusToUser(snap.key);\n      }\n    });\n\n    this.state.prefrenceRef.on(\"child_removed\", snap => {\n      if (userId !== snap.key) {\n        this.addStatusToUser(snap.key, false);\n      }\n    });\n  };\n\n  addStatusToUser = (userid, connect = true) => {\n    const updateUser = this.state.user.reduce((acc, user) => {\n      if (user.uid === userid) {\n        user[\"status\"] = `${connect ? \"online\" : \"offline\"}`;\n      }\n      return acc.concat(user);\n    }, []);\n\n    this.setState({\n      users: updateUser\n    });\n  };\n\n  render() {\n    const { users } = this.state;\n    console.log(this.state.users);\n\n    return (\n      <Menu.Menu className=\"menu\">\n        <Menu.Item>\n          <span>\n            <Icon name=\"mail\" />\n            DirectMessage\n          </span>\n          {\"  \"}({users.length})\n        </Menu.Item>\n        {users.map(user => (\n          <Menu.Item key={user.uid} onClick={() => console.log(user)}>\n            <span>\n              <Icon\n                name=\"circle\"\n                size=\"small\"\n                color={user.status === \"online\" ? \"green\" : \"red\"}\n              />\n              @{user.name}\n            </span>\n          </Menu.Item>\n        ))}\n      </Menu.Menu>\n    );\n  }\n}\nexport default DirectMessage;\n","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\n\nimport UserPanel from \"./userpanel\";\nimport Channels from \"./Channels\";\nimport DirectMessage from \"./DirectMessage\";\n\nconst Sidepanel = props => {\n  return (\n    <Menu\n      size=\"large\"\n      inverted\n      fixed=\"left\"\n      vertical\n      style={{ background: \"#4c3c4c\", fontSize: \"1.2rem\" }}\n    >\n      <UserPanel {...props} />\n      <Channels {...props} />\n      <DirectMessage {...props}/>\n    </Menu>\n  );\n};\n\nexport default React.memo(Sidepanel);\n","import React, { Component } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\n\nimport Metapanel from \"./metapanel/metapenal\";\nimport Colorpanel from \"./colorpanel/colorpanel\";\nimport Messages from \"./Messages/Messages\";\nimport Sidepanel from \"./sidepanel/sidepanel\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <Grid columns=\"equal\" className=\"app\">\n        <Colorpanel />\n        <Sidepanel {...this.props} />\n        <Grid.Column style={{ marginLeft: 320 }}>\n          <Messages {...this.props} />\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Metapanel />\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nclass Spinner extends Component {\n  render() {\n    return (\n      <Dimmer active>\n        <Loader size=\"huge\" content={\"Preparing Chat...\"} />\n      </Dimmer>\n    );\n  }\n}\n\nexport default React.memo(Spinner);\n","import React from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Register from \"./auth/register\";\nimport Login from \"./auth/login\";\nimport Home from \"./Home\";\nimport firebase from \"./../firebase\";\nimport { setUser, userSignOut, SignOut } from \"./../actions/index\";\nimport \"./App.css\";\nimport Spinner from \"./Spinner\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.props.setUser(user);\n        this.props.history.push(\"/\");\n      } else {\n        this.props.history.push(\"/login\");\n        this.props.userSignOut();\n      }\n    });\n  }\n\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <Switch>\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/login\" component={Login} />\n        <Route exact path=\"/\" render={() => <Home {...this.props} />} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state,\n    channel: state.channel.currentChannel,\n    isLoading: state.userReducer.loading\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { setUser, userSignOut, SignOut }\n  )(App)\n);\n","import * as actionType from \"./../actions/types\";\n\nconst initState = {\n  loading: true,\n  user: null\n};\n\nconst userReducer = (state = initState, action) => {\n  switch (action.type) {\n    case actionType.SET_USER:\n      return {\n        ...state,\n        user: action.payload.user,\n        loading: false\n      };\n    case actionType.USER_SIGN_OUT:\n      return {\n        loading: false\n      };\n    case actionType.USER_LOADING:\n      return {\n        loading: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import * as actionTypes from \"./../actions/types\";\n\nconst initChannelState = {\n  currentChannel: null\n};\n\nconst channel_raducer = (state = initChannelState, action) => {\n  switch (action.type) {\n    case actionTypes.CHANGE_CHANNEL_TYPE:\n      return {\n        ...state,\n        currentChannel: action.payload.currentChannel\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default channel_raducer;\n","import { combineReducers } from \"redux\";\nimport userReducer from \"./UserReducer\";\nimport channel_raducer from \"./ChannelReducer\";\n\nconst rootReducer = combineReducers({\n  channel: channel_raducer,\n  userReducer: userReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./component/App\";\nimport rootraducer from \"./reducer/index\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nconst store = createStore(\n  rootraducer,\n  compose(\n    applyMiddleware( thunk),\n    composeWithDevTools()\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}